version: '3.7'
services:
  appimage:
    build:
      context: ./
      dockerfile: ./DockerFile.dockerfile
    restart: always
    environment:
      APP_URL: "http://localhost:18000"
      ASPNETCORE_ENVIRONMENT: "Development"
      MYSQL_URI: "server=imageappmysql;port=3306;database=imageapp;user=root;password=root"
      REDIS_URI: "redis:6379"
      MONGO_URI: "mongodb://root:root@mongo:27017"
      MONGO_DB: "ImageApp"
      MD5_KEY: "TzmEAkb**09!"
      TOKEN_ISSUER: "localhost:18000"
      TOKEN_AUDIENCE: "localhost:18000"
      TOKEN_SECURITY_KEY: "ImageApp**@9922!"
    ports:
      - '18000:80'
    depends_on:
      - imageappmysql
  imageappmysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '27300:3306'
    expose:
      - '3306'
    volumes:
      - imageappmysql-volume:/var/lib/mysql
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: ImageApp
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_ROOT_USERNAME: root
    ports:
     - "18002:27017"
    volumes:
      - mongo-volume:/data/db
  redis:
    image: redis
    container_name: imageapp_redis
    restart: always
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-volume:/data
volumes:
  imageappmysql-volume:
  mongo-volume:
  redis-volume:
